generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Passing {
  id                    Int     @id(map: "PK_Passing")
  player_name           String  @db.NVarChar(Max)
  team_name             String  @db.NVarChar(Max)
  position              String  @db.NVarChar(50)
  games_played          Int
  completions           Int
  attempts              Int
  yards                 Decimal @db.Decimal(18, 1)
  completion_percentage Decimal @db.Decimal(18, 1)
  yards_per_attempt     Decimal @db.Decimal(18, 1)
  hurries               Int
  sacks                 Int
  sack_yards            Decimal @db.Decimal(18, 1)
  interceptions         Int
  touchdowns            Int
  tier                  String  @db.NVarChar(Max)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Rushing {
  id                  Int     @id(map: "PK_Rushing")
  player_name         String  @db.NVarChar(Max)
  team_name           String  @db.NVarChar(Max)
  position            String  @db.NVarChar(50)
  games_played        Int
  rushes              Int
  yards               Decimal @db.Decimal(18, 1)
  average             Decimal @db.Decimal(18, 1)
  touchdowns          Int
  broken_tackles      Int
  yards_after_contact Decimal @db.Decimal(18, 1)
  tackles_for_loss    Int
  fumbles             Int
  fumbles_lost        Int
  tier                String  @db.NVarChar(Max)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model PassingTest {
  id                    Int     @id(map: "PK_PassingTest")
  player_name           String  @db.NVarChar(Max)
  team_name             String  @db.NVarChar(Max)
  position              String  @db.NVarChar(50)
  games_played          Int
  completions           Int
  attempts              Int
  yards                 Decimal @db.Decimal(18, 1)
  completion_percentage Decimal @db.Decimal(18, 1)
  yards_per_attempt     Decimal @db.Decimal(18, 1)
  hurries               Int
  sacks                 Int
  sack_yards            Decimal @db.Decimal(18, 1)
  interceptions         Int
  touchdowns            Int
  tier                  String  @db.NVarChar(Max)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model RushingTest {
  id                  Int     @id(map: "PK_RushingTest")
  player_name         String  @db.NVarChar(Max)
  team_name           String  @db.NVarChar(Max)
  position            String  @db.NVarChar(50)
  games_played        Int
  rushes              Int
  yards               Decimal @db.Decimal(18, 1)
  average             Decimal @db.Decimal(18, 1)
  touchdowns          Int
  broken_tackles      Int
  yards_after_contact Decimal @db.Decimal(18, 1)
  tackles_for_loss    Int
  fumbles             Int
  fumbles_lost        Int
  tier                String  @db.NVarChar(Max)
}

model Receiving {
  id                Int     @id(map: "PK_Receiving")
  player_name       String  @db.NVarChar(Max)
  team_name         String  @db.NVarChar(Max)
  position          String  @db.NVarChar(50)
  games_played      Int
  targets           Int
  receptions        Int
  yards             Decimal @db.Decimal(18, 1)
  average           Decimal @db.Decimal(18, 1)
  yards_after_catch Decimal @db.Decimal(18, 1)
  touchdowns        Int
  drops             Int
  fumbles           Int
  fumbles_lost      Int
  tier              String  @db.NVarChar(Max)
}

model ReceivingTest {
  id                Int     @id(map: "PK_ReceivingTest")
  player_name       String  @db.NVarChar(Max)
  team_name         String  @db.NVarChar(Max)
  position          String  @db.NVarChar(50)
  games_played      Int
  targets           Int
  receptions        Int
  yards             Decimal @db.Decimal(18, 1)
  average           Decimal @db.Decimal(18, 1)
  yards_after_catch Decimal @db.Decimal(18, 1)
  touchdowns        Int
  drops             Int
  fumbles           Int
  fumbles_lost      Int
  tier              String  @db.NVarChar(Max)
}

model Defensive {
  id                   Int     @id(map: "PK_Defensive")
  player_name          String  @db.NVarChar(Max)
  team_name            String  @db.NVarChar(Max)
  position             String  @db.NVarChar(50)
  games_played         Int
  tackles              Int
  tackle_assists       Int
  missed_tackles       Int
  sticks               Int
  forced_fumbles       Int
  fumble_recoveries    Int
  tackles_for_loss     Int
  defensive_touchdowns Int
  times_pancaked       Int
  reverse_pancakes     Int
  sacks                Decimal @db.Decimal(18, 1)
  sack_yards           Decimal @db.Decimal(18, 1)
  hurries              Int
  targets              Int
  receptions_allowed   Int
  passes_defended      Int
  passes_knocked_loose Int
  interceptions        Int
  interception_yards   Decimal @db.Decimal(18, 1)
  tier                 String  @db.NVarChar(Max)
}

model DefensiveTest {
  id                   Int     @id(map: "PK_DefensiveTest")
  player_name          String  @db.NVarChar(Max)
  team_name            String  @db.NVarChar(Max)
  position             String  @db.NVarChar(50)
  games_played         Int
  tackles              Int
  tackle_assists       Int
  missed_tackles       Int
  sticks               Int
  forced_fumbles       Int
  fumble_recoveries    Int
  tackles_for_loss     Int
  defensive_touchdowns Int
  times_pancaked       Int
  reverse_pancakes     Int
  sacks                Decimal @db.Decimal(18, 1)
  sack_yards           Decimal @db.Decimal(18, 1)
  hurries              Int
  targets              Int
  receptions_allowed   Int
  passes_defended      Int
  passes_knocked_loose Int
  interceptions        Int
  interception_yards   Decimal @db.Decimal(18, 1)
  tier                 String  @db.NVarChar(Max)
}

model Blocking {
  id               Int    @id(map: "PK_Blocking")
  player_name      String @db.NVarChar(Max)
  team_name        String @db.NVarChar(Max)
  position         String @db.NVarChar(50)
  games_played     Int
  plays            Int
  pancakes         Int
  reverse_pancaked Int
  hurries_allowed  Int
  sacks_allowed    Int
  tier             String @db.NVarChar(Max)
}

model BlockingTest {
  id               Int    @id(map: "PK_BlockingTest")
  player_name      String @db.NVarChar(Max)
  team_name        String @db.NVarChar(Max)
  position         String @db.NVarChar(50)
  games_played     Int
  plays            Int
  pancakes         Int
  reverse_pancaked Int
  hurries_allowed  Int
  sacks_allowed    Int
  tier             String @db.NVarChar(Max)
}
